name: Auto Camera Scraper

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allow manual trigger from GitHub UI
  push:
    branches: [main]  # Also run on pushes to test

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install || echo "No package.json found, skipping npm install"
          
      - name: Create data directory and initial files
        run: |
          mkdir -p data
          echo "Data directory created"
          
          # Create initial database file if it doesn't exist
          if [ ! -f "data/camera-vault.db" ]; then
            echo "Creating initial database file..."
            touch data/camera-vault.db
          fi
          
          # Create initial JSON file for testing
          if [ ! -f "data/cameras.json" ]; then
            echo '{"cameras": [], "lastUpdated": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}' > data/cameras.json
          fi
          
      - name: Run camera scraper
        run: |
          echo "Starting camera scraping..."
          # Check if scraper files exist
          if [ -f "ultimate-scraper.js" ]; then
            echo "Found ultimate-scraper.js, running it..."
            node ultimate-scraper.js || echo "Ultimate scraper finished with status $?"
          elif [ -f "continuous-scraper.js" ]; then
            echo "Found continuous-scraper.js, running it..."
            timeout 60 node continuous-scraper.js || echo "Continuous scraper finished"
          else
            echo "No scraper files found, adding test data..."
            echo '{"cameras": [{"id": "test-'$(date +%s)'", "brand": "Test", "model": "Camera '$(date +%s)'", "added": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"}]}' > data/cameras.json
          fi
          
      - name: Check what was created
        run: |
          echo "Files in data directory:"
          ls -la data/
          echo "Content of cameras.json:"
          cat data/cameras.json || echo "No cameras.json found"
          
      - name: Commit changes if any
        run: |
          git config --local user.email "bot@cameravault.com"
          git config --local user.name "Camera Bot"
          git add data/* || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ¤– Auto-update camera database" || echo "Commit failed"
            git push || echo "Push failed"
          fi
